{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\melvi\\\\OneDrive\\\\Bureau\\\\react-tp\\\\todolist\\\\src\\\\Components\\\\Form.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport Item from \"./Item\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Form() {\n  _s();\n\n  const [dataArr, setDataArr] = useState([]);\n  const [stateInput, setStateInput] = useState();\n  const [stateTask, setStateTask] = useState([]); //FONCTION POUR SUPPRIMER UN ELEMENT DE LA LISTE \n\n  const deleteElement = id => {\n    // Ici nous par rapport à l'id de l'item\n    const filteredState = dataArr.filter(item => {\n      return item.id !== id;\n    });\n    const filteredStateComplete = stateTask.filter(item => {\n      return item.id !== id;\n    });\n    setDataArr(filteredState);\n    setStateTask(filteredStateComplete);\n  }; // FONCTION POUR LIER NOTRE INPUT AU STATE (setStateInput)\n\n\n  const linkedInput = e => {\n    setStateInput(e);\n  }; // FONCTION POUR AJOUTER UNE TACHE \n\n\n  const addTodo = e => {\n    // Eviter le rechargement de la page lors de la soumission du formulaire\n    e.preventDefault();\n\n    if (dataArr.length > 5) {\n      alert('Complete les autres taches ');\n    } else {\n      //Créer un nouveau tableau avec les données du State de notre liste car un State est immuable \n      const newArr = [...dataArr]; // Création d'un nouvel objet \n\n      const newTodo = {}; // Ajouter une propriété txt à l'objet \n\n      newTodo.txt = stateInput; // Ajouter un id\n\n      newTodo.id = uuidv4(); // On ajoute ce nouvel objet dans notre nouveau tableau (newArr)\n\n      newArr.push(newTodo); // On change le State avec le nouveau tableau \n\n      setDataArr(newArr); //On reset le State de l'input en bonus \n\n      setStateInput('');\n    }\n  };\n\n  const taskState = id => {\n    const filteredItem = dataArr.filter(item => {\n      return item.id == id;\n    });\n    const finalArr = dataArr.filter(item => {\n      return item.id !== id;\n    });\n    const newCompleteTaskObj = {};\n    filteredItem.map(item => {\n      newCompleteTaskObj.txt = item.txt;\n      newCompleteTaskObj.id = item.id;\n    });\n    const completeTask = [...stateTask];\n    completeTask.push(newCompleteTaskObj);\n    setStateTask(completeTask);\n    setDataArr(finalArr);\n  };\n\n  const moveElement = id => {\n    const filteredItem = stateTask.filter(item => {\n      return item.id == id;\n    });\n    const finalArr = stateTask.filter(item => {\n      return item.id !== id;\n    });\n    const newObj = {};\n    filteredItem.map(item => {\n      newObj.txt = item.txt;\n      newObj.id = item.id;\n    });\n    const completeTask = [...dataArr];\n    completeTask.push(newObj);\n    setStateTask(finalArr);\n    setDataArr(completeTask);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"m-auto px-4 col-12 col-sm-10 col-lg-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"mb-3\",\n      onSubmit: e => addTodo(e),\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"todo\",\n        className: \"form-label\",\n        children: \"Chose \\xE0 faire\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: stateInput,\n        onInput: e => linkedInput(e.target.value),\n        type: \"text\",\n        className: \"form-control\",\n        id: \"todo\",\n        placeholder: \"Entrez votre t\\xE2che\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"mt-2 btn btn-dark d-block\",\n        children: \"Envoyer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-dark rounded p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-white\",\n        children: \"Liste des choses \\xE0 faire\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-group\",\n        children: dataArr.map(item => {\n          return /*#__PURE__*/_jsxDEV(Item, {\n            txt: item.txt,\n            id: item.id,\n            delFunc: deleteElement,\n            stateOfTask: taskState\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-secondary rounded p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-white\",\n        children: \"Liste des choses faites \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-group\",\n        children: stateTask.map(item => {\n          return /*#__PURE__*/_jsxDEV(Item, {\n            txt: item.txt,\n            id: item.id,\n            delFunc: deleteElement,\n            todoTask: moveElement\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 37\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Form, \"ZZU4biurPYUu3h1w0+pmSIvyDAA=\");\n\n_c = Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["C:/Users/melvi/OneDrive/Bureau/react-tp/todolist/src/Components/Form.js"],"names":["useState","Item","v4","uuidv4","Form","dataArr","setDataArr","stateInput","setStateInput","stateTask","setStateTask","deleteElement","id","filteredState","filter","item","filteredStateComplete","linkedInput","e","addTodo","preventDefault","length","alert","newArr","newTodo","txt","push","taskState","filteredItem","finalArr","newCompleteTaskObj","map","completeTask","moveElement","newObj","target","value"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\r\nimport Item from \"./Item\";\r\nimport {v4 as uuidv4} from 'uuid'\r\n\r\nexport default function Form()\r\n{\r\n    const [dataArr, setDataArr] = useState([])\r\n\r\n    const [stateInput,setStateInput] = useState();\r\n\r\n    const [stateTask,setStateTask] = useState([]);\r\n\r\n    //FONCTION POUR SUPPRIMER UN ELEMENT DE LA LISTE \r\n    const deleteElement = id =>{\r\n        // Ici nous par rapport à l'id de l'item\r\n        const filteredState = dataArr.filter(item =>{\r\n           return item.id !== id;\r\n       })\r\n       const filteredStateComplete = stateTask.filter(item =>{\r\n        return item.id !== id;\r\n    })\r\n       setDataArr(filteredState)\r\n       setStateTask(filteredStateComplete)\r\n    }\r\n\r\n    // FONCTION POUR LIER NOTRE INPUT AU STATE (setStateInput)\r\n    const linkedInput = e =>{\r\n        setStateInput(e);\r\n    }\r\n\r\n\r\n    // FONCTION POUR AJOUTER UNE TACHE \r\n    const addTodo = e =>{\r\n        // Eviter le rechargement de la page lors de la soumission du formulaire\r\n        e.preventDefault();\r\n\r\n        if(dataArr.length > 5)\r\n        {\r\n            alert('Complete les autres taches ');\r\n        }\r\n        else\r\n        {\r\n            //Créer un nouveau tableau avec les données du State de notre liste car un State est immuable \r\n            const newArr = [...dataArr]\r\n    \r\n            // Création d'un nouvel objet \r\n            const newTodo = {};\r\n    \r\n            // Ajouter une propriété txt à l'objet \r\n    \r\n            newTodo.txt = stateInput;\r\n    \r\n            // Ajouter un id\r\n            newTodo.id = uuidv4();\r\n            // On ajoute ce nouvel objet dans notre nouveau tableau (newArr)\r\n            newArr.push(newTodo);\r\n    \r\n            // On change le State avec le nouveau tableau \r\n            setDataArr(newArr);\r\n    \r\n            //On reset le State de l'input en bonus \r\n            setStateInput('');\r\n        }\r\n    }\r\n\r\n    const taskState = id => {\r\n        const filteredItem = dataArr.filter(item =>{\r\n            return item.id == id;\r\n        })\r\n        \r\n        const finalArr = dataArr.filter(item =>{\r\n            return item.id !== id;\r\n        })\r\n        \r\n        const newCompleteTaskObj = {};\r\n        filteredItem.map((item) => {\r\n            newCompleteTaskObj.txt = item.txt;\r\n            newCompleteTaskObj.id = item.id;\r\n        })\r\n\r\n        const completeTask = [...stateTask]\r\n        completeTask.push(newCompleteTaskObj);\r\n        setStateTask(completeTask);\r\n        setDataArr(finalArr);\r\n    }\r\n\r\n\r\n    const moveElement = id => {\r\n        const filteredItem = stateTask.filter(item =>{\r\n            return item.id == id;\r\n        })\r\n        \r\n        const finalArr = stateTask.filter(item =>{\r\n            return item.id !== id;\r\n        })\r\n        \r\n        const newObj = {};\r\n        filteredItem.map((item) => {\r\n            newObj.txt = item.txt;\r\n            newObj.id = item.id;\r\n        })\r\n\r\n        const completeTask = [...dataArr]\r\n        completeTask.push(newObj);\r\n        setStateTask(finalArr);\r\n        setDataArr(completeTask);\r\n    }\r\n\r\n\r\n   \r\n    return(\r\n        <div className=\"m-auto px-4 col-12 col-sm-10 col-lg-6\">\r\n            <form className=\"mb-3\" onSubmit={e => addTodo(e)}>\r\n                <label htmlFor=\"todo\" className=\"form-label\">\r\n                    Chose à faire\r\n                </label>\r\n                <input value={stateInput} onInput={e => linkedInput(e.target.value)} type=\"text\" className=\"form-control\" id=\"todo\" placeholder=\"Entrez votre tâche\" />\r\n                <button className=\"mt-2 btn btn-dark d-block\">Envoyer</button>\r\n            </form>\r\n            <div className=\"bg-dark rounded p-4\">\r\n                <h2 className=\"text-white\">Liste des choses à faire</h2>\r\n                <ul className=\"list-group\">\r\n                    {dataArr.map((item)=>{\r\n                        return(\r\n                            <Item \r\n                            txt ={item.txt}\r\n                            key={item.id}\r\n                            id={item.id}\r\n                            delFunc = {deleteElement}\r\n                            stateOfTask = {taskState}\r\n                            />\r\n                        )\r\n                    })}\r\n                </ul>\r\n            </div>\r\n\r\n                <br />\r\n                <div className=\"bg-secondary rounded p-4\">\r\n                    <h2 className=\"text-white\">Liste des choses faites </h2>\r\n                    <ul className=\"list-group\">\r\n                        {stateTask.map((item)=>{\r\n                                return(\r\n                                    <Item \r\n                                    txt ={item.txt}\r\n                                    key={item.id}\r\n                                    id={item.id}\r\n                                    delFunc = {deleteElement}\r\n                                    todoTask = {moveElement}\r\n                                    />\r\n                                )\r\n                            })\r\n                        }\r\n                    </ul>\r\n                </div>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}